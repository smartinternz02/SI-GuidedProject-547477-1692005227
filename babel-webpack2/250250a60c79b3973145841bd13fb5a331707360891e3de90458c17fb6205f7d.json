{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nimport * as i2 from \"@angular/common/http\";\nimport * as i3 from \"@angular/forms\";\nclass BookComponent {\n  constructor(route, http, router) {\n    this.route = route;\n    this.http = http;\n    this.router = router;\n    this.ht = \"\";\n    this.bookingData = {\n      userId: \"\",\n      HotelName: \"\",\n      name: \"\",\n      email: \"\",\n      date: \"\",\n      time: \"\",\n      guests: \"\"\n    };\n    const user = localStorage.getItem('jwtToken');\n    if (!user) {\n      this.router.navigate(['/login']);\n    }\n  }\n  ngOnInit() {\n    this.route.queryParams.subscribe(params => {\n      const hotelName = params['hotelname'];\n      this.ht = hotelName;\n      // Use the hotel name as needed\n      this.bookingData.HotelName = this.ht;\n      // Retrieve the user ID from local storage\n      const userId = localStorage.getItem('userId');\n      if (userId) {\n        this.bookingData.userId = userId;\n      }\n    });\n  }\n  submitForm(form) {\n    // Pass the name to the userbooking page\n    this.router.navigate(['/userbooking']);\n    // Send the booking data to the server\n    this.http.post('http://localhost:3000/book', this.bookingData).subscribe(response => {\n      console.log(response);\n      alert('Booking successful');\n    }, error => {\n      console.log('Error submitting data:', error);\n      alert('Booking failed!');\n    });\n    form.reset();\n  }\n}\nBookComponent.ɵfac = function BookComponent_Factory(t) {\n  return new (t || BookComponent)(i0.ɵɵdirectiveInject(i1.ActivatedRoute), i0.ɵɵdirectiveInject(i2.HttpClient), i0.ɵɵdirectiveInject(i1.Router));\n};\nBookComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: BookComponent,\n  selectors: [[\"app-book\"]],\n  decls: 34,\n  vars: 6,\n  consts: [[1, \"flex\"], [1, \"container\"], [3, \"ngSubmit\"], [\"Form\", \"ngForm\"], [\"for\", \"name\"], [\"type\", \"text\", \"name\", \"name\", \"id\", \"name\", \"required\", \"\", 3, \"ngModel\", \"ngModelChange\"], [\"for\", \"email\"], [\"type\", \"email\", \"id\", \"email\", \"name\", \"email\", \"required\", \"\", 3, \"ngModel\", \"ngModelChange\"], [\"for\", \"date\"], [\"type\", \"date\", \"id\", \"date\", \"name\", \"date\", \"required\", \"\", 3, \"ngModel\", \"ngModelChange\"], [\"for\", \"time\"], [\"type\", \"time\", \"id\", \"time\", \"name\", \"time\", \"required\", \"\", 3, \"ngModel\", \"ngModelChange\"], [\"for\", \"guests\"], [\"type\", \"number\", \"id\", \"guests\", \"name\", \"guests\", \"min\", \"1\", \"required\", \"\", 3, \"ngModel\", \"ngModelChange\"], [\"type\", \"submit\", \"value\", \"Book Table\"]],\n  template: function BookComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      const _r1 = i0.ɵɵgetCurrentView();\n      i0.ɵɵelementStart(0, \"html\")(1, \"body\")(2, \"div\", 0)(3, \"div\", 1)(4, \"h1\");\n      i0.ɵɵtext(5, \"Table Booking\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(6, \"br\")(7, \"br\");\n      i0.ɵɵelementStart(8, \"div\")(9, \"h3\");\n      i0.ɵɵtext(10);\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(11, \"form\", 2, 3);\n      i0.ɵɵlistener(\"ngSubmit\", function BookComponent_Template_form_ngSubmit_11_listener() {\n        i0.ɵɵrestoreView(_r1);\n        const _r0 = i0.ɵɵreference(12);\n        return i0.ɵɵresetView(ctx.submitForm(_r0));\n      });\n      i0.ɵɵelementStart(13, \"label\", 4);\n      i0.ɵɵtext(14, \"Name:\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(15, \"input\", 5);\n      i0.ɵɵlistener(\"ngModelChange\", function BookComponent_Template_input_ngModelChange_15_listener($event) {\n        return ctx.bookingData.name = $event;\n      });\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(16, \"br\");\n      i0.ɵɵelementStart(17, \"label\", 6);\n      i0.ɵɵtext(18, \"Email:\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(19, \"input\", 7);\n      i0.ɵɵlistener(\"ngModelChange\", function BookComponent_Template_input_ngModelChange_19_listener($event) {\n        return ctx.bookingData.email = $event;\n      });\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(20, \"br\");\n      i0.ɵɵelementStart(21, \"label\", 8);\n      i0.ɵɵtext(22, \"Date:\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(23, \"input\", 9);\n      i0.ɵɵlistener(\"ngModelChange\", function BookComponent_Template_input_ngModelChange_23_listener($event) {\n        return ctx.bookingData.date = $event;\n      });\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(24, \"br\");\n      i0.ɵɵelementStart(25, \"label\", 10);\n      i0.ɵɵtext(26, \"Time:\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(27, \"input\", 11);\n      i0.ɵɵlistener(\"ngModelChange\", function BookComponent_Template_input_ngModelChange_27_listener($event) {\n        return ctx.bookingData.time = $event;\n      });\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(28, \"br\");\n      i0.ɵɵelementStart(29, \"label\", 12);\n      i0.ɵɵtext(30, \"Number of Guests:\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(31, \"input\", 13);\n      i0.ɵɵlistener(\"ngModelChange\", function BookComponent_Template_input_ngModelChange_31_listener($event) {\n        return ctx.bookingData.guests = $event;\n      });\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(32, \"br\")(33, \"input\", 14);\n      i0.ɵɵelementEnd()()()()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(10);\n      i0.ɵɵtextInterpolate1(\"Booking For \", ctx.ht, \"\");\n      i0.ɵɵadvance(5);\n      i0.ɵɵproperty(\"ngModel\", ctx.bookingData.name);\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"ngModel\", ctx.bookingData.email);\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"ngModel\", ctx.bookingData.date);\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"ngModel\", ctx.bookingData.time);\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"ngModel\", ctx.bookingData.guests);\n    }\n  },\n  dependencies: [i3.ɵNgNoValidate, i3.DefaultValueAccessor, i3.NumberValueAccessor, i3.NgControlStatus, i3.NgControlStatusGroup, i3.RequiredValidator, i3.MinValidator, i3.NgModel, i3.NgForm],\n  styles: [\".container[_ngcontent-%COMP%] {\\n    width: 600px;\\n    height: 650px;\\n    margin: 0 auto;\\n    padding: 30px;\\n    border: 1px solid #ccc;\\n    border-radius: 5px;\\n  }\\n  \\n  h1[_ngcontent-%COMP%] {\\n    text-align: center;\\n  }\\n  \\n  form[_ngcontent-%COMP%] {\\n    display: flex;\\n    flex-direction: column;\\n  }\\n  \\n  label[_ngcontent-%COMP%] {\\n    margin-bottom: 5px;\\n  }\\n  \\n  input[type=\\\"submit\\\"][_ngcontent-%COMP%] {\\n    margin-top: 10px;\\n    padding: 10px;\\n    background-color: #4CAF50;\\n    color: white;\\n    border: none;\\n    border-radius: 5px;\\n    cursor: pointer;\\n  }\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvY29tcG9uZW50L2Jvb2svYm9vay5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0lBQ0ksWUFBWTtJQUNaLGFBQWE7SUFDYixjQUFjO0lBQ2QsYUFBYTtJQUNiLHNCQUFzQjtJQUN0QixrQkFBa0I7RUFDcEI7O0VBRUE7SUFDRSxrQkFBa0I7RUFDcEI7O0VBRUE7SUFDRSxhQUFhO0lBQ2Isc0JBQXNCO0VBQ3hCOztFQUVBO0lBQ0Usa0JBQWtCO0VBQ3BCOztFQUVBO0lBQ0UsZ0JBQWdCO0lBQ2hCLGFBQWE7SUFDYix5QkFBeUI7SUFDekIsWUFBWTtJQUNaLFlBQVk7SUFDWixrQkFBa0I7SUFDbEIsZUFBZTtFQUNqQiIsInNvdXJjZXNDb250ZW50IjpbIi5jb250YWluZXIge1xuICAgIHdpZHRoOiA2MDBweDtcbiAgICBoZWlnaHQ6IDY1MHB4O1xuICAgIG1hcmdpbjogMCBhdXRvO1xuICAgIHBhZGRpbmc6IDMwcHg7XG4gICAgYm9yZGVyOiAxcHggc29saWQgI2NjYztcbiAgICBib3JkZXItcmFkaXVzOiA1cHg7XG4gIH1cbiAgXG4gIGgxIHtcbiAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XG4gIH1cbiAgXG4gIGZvcm0ge1xuICAgIGRpc3BsYXk6IGZsZXg7XG4gICAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcbiAgfVxuICBcbiAgbGFiZWwge1xuICAgIG1hcmdpbi1ib3R0b206IDVweDtcbiAgfVxuICBcbiAgaW5wdXRbdHlwZT1cInN1Ym1pdFwiXSB7XG4gICAgbWFyZ2luLXRvcDogMTBweDtcbiAgICBwYWRkaW5nOiAxMHB4O1xuICAgIGJhY2tncm91bmQtY29sb3I6ICM0Q0FGNTA7XG4gICAgY29sb3I6IHdoaXRlO1xuICAgIGJvcmRlcjogbm9uZTtcbiAgICBib3JkZXItcmFkaXVzOiA1cHg7XG4gICAgY3Vyc29yOiBwb2ludGVyO1xuICB9XG4gICJdLCJzb3VyY2VSb290IjoiIn0= */\"]\n});\nexport { BookComponent };","map":{"version":3,"names":["BookComponent","constructor","route","http","router","ht","bookingData","userId","HotelName","name","email","date","time","guests","user","localStorage","getItem","navigate","ngOnInit","queryParams","subscribe","params","hotelName","submitForm","form","post","response","console","log","alert","error","reset","i0","ɵɵdirectiveInject","i1","ActivatedRoute","i2","HttpClient","Router","selectors","decls","vars","consts","template","BookComponent_Template","rf","ctx","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵelement","ɵɵlistener","BookComponent_Template_form_ngSubmit_11_listener","ɵɵrestoreView","_r1","_r0","ɵɵreference","ɵɵresetView","BookComponent_Template_input_ngModelChange_15_listener","$event","BookComponent_Template_input_ngModelChange_19_listener","BookComponent_Template_input_ngModelChange_23_listener","BookComponent_Template_input_ngModelChange_27_listener","BookComponent_Template_input_ngModelChange_31_listener","ɵɵadvance","ɵɵtextInterpolate1","ɵɵproperty"],"sources":["C:\\Users\\User\\Desktop\\bookingwebsite-main\\bookingwebsite-main\\client\\src\\app\\component\\book\\book.component.ts","C:\\Users\\User\\Desktop\\bookingwebsite-main\\bookingwebsite-main\\client\\src\\app\\component\\book\\book.component.html"],"sourcesContent":["import { Component } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { HttpClient } from '@angular/common/http';\n\n@Component({\n  selector: 'app-book',\n  templateUrl: './book.component.html',\n  styleUrls: ['./book.component.css']\n})\nexport class BookComponent {\n  ht = \"\";\n  bookingData = {\n    userId: \"\",\n    HotelName: \"\",\n    name: \"\",\n    email: \"\",\n    date: \"\",\n    time: \"\",\n    guests: \"\"\n  };\n\n  constructor(private route: ActivatedRoute, private http: HttpClient, private router: Router) { \n    const user=localStorage.getItem('jwtToken')\n    if (!user){\n     this.router.navigate(['/login'])\n    }\n  }\n\n  ngOnInit() {\n    this.route.queryParams.subscribe(params => {\n      const hotelName = params['hotelname'];\n      this.ht = hotelName;\n\n      // Use the hotel name as needed\n      this.bookingData.HotelName = this.ht;\n\n      // Retrieve the user ID from local storage\n      const userId = localStorage.getItem('userId');\n      if (userId) {\n        this.bookingData.userId = userId;\n      }\n    });\n  }\n\n  submitForm(form: any) {\n    // Pass the name to the userbooking page\n    this.router.navigate(['/userbooking']);\n\n    // Send the booking data to the server\n    this.http.post('http://localhost:3000/book', this.bookingData).subscribe(\n      (response) => {\n        console.log(response);\n        alert('Booking successful');\n      },\n      (error) => {\n        console.log('Error submitting data:', error);\n        alert('Booking failed!');\n      }\n    );\n    form.reset();\n  }\n}\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n// import { Component } from '@angular/core';\n// import { ActivatedRoute, Router, RouterModule } from '@angular/router';\n// import { HttpClient } from '@angular/common/http';\n// import { FormsModule } from '@angular/forms';\n\n\n\n// @Component({\n//   selector: 'app-book',\n//   templateUrl: './book.component.html',\n//   styleUrls: ['./book.component.css']\n// })\n// export class BookComponent  {\n//  ht=\"\";\n//  bookingData = {\n//  HotelName:\"\",\n//  name:\"\",\n//  email:\"\",\n//  date:\"\",\n//  time:\"\",\n//  guests:\"\"\n// };\n\n//   constructor(private route: ActivatedRoute,private http:HttpClient,private router: Router) {}\n  \n\n\n//   ngOnInit() {\n//     this.route.queryParams.subscribe(params => {\n//       const hotelName = params['hotelname'];\n//       this.ht=hotelName;\n\n//       // Use the hotel name as needed\n//       this.bookingData.HotelName = this.ht;\n//     });\n//   }\n\n  \n\n//   submitForm(form: any) {\n//     // Pass the name to the userbooking page\n//     this.router.navigate(['/userbooking']);\n\n//     // Send the booking data to the server\n//     this.http.post('http://localhost:3000/book', this.bookingData).subscribe(\n//       (response) => {\n//         console.log(response);\n//         alert('Booking successful');\n//       },\n//       (error) => {\n//         console.log('Error submitting data:', error);\n//         alert('Booking failed!');\n//       }\n//     );\n//     form.reset();\n//   }\n// }\n","<!DOCTYPE html>\n<html>\n\n<body>\n\n    <div class=\"flex\">\n       \n<div class=\"container\">\n  <h1>Table Booking</h1>\n  <br>\n  <br>\n  <div><h3>Booking For {{ht}}</h3></div>\n  <form #Form=\"ngForm\" (ngSubmit)=\"submitForm(Form)\">\n    <label for=\"name\">Name:</label>\n    <input type=\"text\"  [(ngModel)]=\"bookingData.name\" name=\"name\" id=\"name\"  required>\n<br>\n    <label for=\"email\">Email:</label>\n    <input type=\"email\"  id=\"email\" [(ngModel)]=\"bookingData.email\" name=\"email\" required>\n<br>\n    <label for=\"date\">Date:</label>\n    <input type=\"date\"   id=\"date\" [(ngModel)]=\"bookingData.date\" name=\"date\" required>\n<br>\n    <label for=\"time\">Time:</label>\n    <input type=\"time\"  id=\"time\" [(ngModel)]=\"bookingData.time\" name=\"time\" required>\n<br>\n    <label for=\"guests\">Number of Guests:</label>\n    <input type=\"number\"  id=\"guests\" [(ngModel)]=\"bookingData.guests\" name=\"guests\" min=\"1\" required>\n<br>\n    <input type=\"submit\"  value=\"Book Table\">\n  </form>\n  </div>\n\n </div>\n</body>\n</html>\n   \n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}