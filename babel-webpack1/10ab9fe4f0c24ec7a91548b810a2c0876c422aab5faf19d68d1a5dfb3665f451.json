{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nimport * as i2 from \"@angular/common\";\nimport * as i3 from \"../dasboard/dasboard.component\";\nfunction AllUsersComponent_ul_2_li_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"li\", 5)(1, \"div\", 6)(2, \"div\")(3, \"strong\");\n    i0.ɵɵtext(4, \"User Id:\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(5);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(6, \"div\")(7, \"strong\");\n    i0.ɵɵtext(8, \"First Name:\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(9);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(10, \"div\")(11, \"strong\");\n    i0.ɵɵtext(12, \"Last Name:\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(13);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(14, \"div\")(15, \"strong\");\n    i0.ɵɵtext(16, \"Email:\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(17);\n    i0.ɵɵelementEnd()()();\n  }\n  if (rf & 2) {\n    const user_r2 = ctx.$implicit;\n    i0.ɵɵadvance(5);\n    i0.ɵɵtextInterpolate1(\" \", user_r2._id, \" \");\n    i0.ɵɵadvance(4);\n    i0.ɵɵtextInterpolate1(\" \", user_r2.firstname, \" \");\n    i0.ɵɵadvance(4);\n    i0.ɵɵtextInterpolate1(\" \", user_r2.lastname, \" \");\n    i0.ɵɵadvance(4);\n    i0.ɵɵtextInterpolate1(\" \", user_r2.email, \" \");\n  }\n}\nfunction AllUsersComponent_ul_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"ul\", 2)(1, \"h1\", 3);\n    i0.ɵɵtext(2, \"Users\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtemplate(3, AllUsersComponent_ul_2_li_3_Template, 18, 4, \"li\", 4);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(3);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r0.users);\n  }\n}\nclass AllUsersComponent {\n  constructor(http) {\n    this.http = http;\n    this.users = [];\n    this.isLoading = false;\n  }\n  ngOnInit() {\n    this.fetchUsers();\n  }\n  fetchUsers() {\n    this.isLoading = true;\n    this.http.get('http://localhost:3000/user').subscribe(users => {\n      this.users = users;\n      this.isLoading = false;\n    }, error => {\n      console.error(error);\n    });\n  }\n}\nAllUsersComponent.ɵfac = function AllUsersComponent_Factory(t) {\n  return new (t || AllUsersComponent)(i0.ɵɵdirectiveInject(i1.HttpClient));\n};\nAllUsersComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: AllUsersComponent,\n  selectors: [[\"app-all-users\"]],\n  decls: 3,\n  vars: 1,\n  consts: [[1, \"d-flex\"], [\"class\", \"list-group p-4\", \"style\", \"width: 800px;\", 4, \"ngIf\"], [1, \"list-group\", \"p-4\", 2, \"width\", \"800px\"], [1, \"mb-4\", 2, \"color\", \"rgb(98, 90, 252)\", \"font-size\", \"38px\", \"font-weight\", \"bold\"], [\"class\", \"list-group-item\", 4, \"ngFor\", \"ngForOf\"], [1, \"list-group-item\"], [1, \"col\", \"card\", \"p-4\"]],\n  template: function AllUsersComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0);\n      i0.ɵɵelement(1, \"app-dasboard\");\n      i0.ɵɵtemplate(2, AllUsersComponent_ul_2_Template, 4, 1, \"ul\", 1);\n      i0.ɵɵelementEnd();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"ngIf\", !ctx.isLoading);\n    }\n  },\n  dependencies: [i2.NgForOf, i2.NgIf, i3.DasboardComponent],\n  styles: [\".d-flex[_ngcontent-%COMP%]{\\n    height: 90vh;\\n    overflow: auto;\\n}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvYWRtaW4vYWxsLXVzZXJzL2FsbC11c2Vycy5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0lBQ0ksWUFBWTtJQUNaLGNBQWM7QUFDbEIiLCJzb3VyY2VzQ29udGVudCI6WyIuZC1mbGV4e1xuICAgIGhlaWdodDogOTB2aDtcbiAgICBvdmVyZmxvdzogYXV0bztcbn0iXSwic291cmNlUm9vdCI6IiJ9 */\"]\n});\nexport { AllUsersComponent };","map":{"version":3,"names":["i0","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵadvance","ɵɵtextInterpolate1","user_r2","_id","firstname","lastname","email","ɵɵtemplate","AllUsersComponent_ul_2_li_3_Template","ɵɵproperty","ctx_r0","users","AllUsersComponent","constructor","http","isLoading","ngOnInit","fetchUsers","get","subscribe","error","console","ɵɵdirectiveInject","i1","HttpClient","selectors","decls","vars","consts","template","AllUsersComponent_Template","rf","ctx","ɵɵelement","AllUsersComponent_ul_2_Template"],"sources":["C:\\Users\\User\\Desktop\\bookingwebsite-main\\bookingwebsite-main\\client\\src\\app\\admin\\all-users\\all-users.component.ts","C:\\Users\\User\\Desktop\\bookingwebsite-main\\bookingwebsite-main\\client\\src\\app\\admin\\all-users\\all-users.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\n\n@Component({\n  selector: 'app-all-users',\n  templateUrl: './all-users.component.html',\n  styleUrls: ['./all-users.component.css']\n})\nexport class AllUsersComponent implements OnInit {\n\n  users: any[] = [];\n  public isLoading = false\n\n  constructor(private http:HttpClient) { }\n\n  ngOnInit() {\n    this.fetchUsers();\n  }\n\n  fetchUsers() {\n    this.isLoading = true\n    this.http.get<any[]>('http://localhost:3000/user').subscribe(\n      users => {\n        this.users = users;\n        \n        this.isLoading = false\n      },\n      error => {\n        console.error(error);\n      }\n    );\n  }\n  \n}\n","<div class=\"d-flex\">\n  <app-dasboard></app-dasboard>\n\n<ul class=\"list-group p-4\" style=\"width: 800px;\" *ngIf=\"!isLoading\">\n    <h1 style=\"color: rgb(98, 90, 252); font-size: 38px; font-weight: bold;\" class=\"mb-4\">Users</h1>\n    <li class=\"list-group-item\" *ngFor=\"let user of users\">\n      <div class=\"col card p-4\">\n        <div>\n            <strong>User Id:</strong> {{ user._id }}\n          </div>\n        <div>\n          <strong>First Name:</strong> {{ user.firstname }}\n        </div>\n        <div>\n          <strong>Last Name:</strong> {{ user.lastname }}\n        </div>\n        \n        <div>\n          <strong>Email:</strong> {{ user.email }}\n        </div>\n      </div>\n    </li>\n  </ul>\n</div>\n   \n  "],"mappings":";;;;;;ICKIA,EAAA,CAAAC,cAAA,YAAuD;IAGvCD,EAAA,CAAAE,MAAA,eAAQ;IAAAF,EAAA,CAAAG,YAAA,EAAS;IAACH,EAAA,CAAAE,MAAA,GAC5B;IAAAF,EAAA,CAAAG,YAAA,EAAM;IACRH,EAAA,CAAAC,cAAA,UAAK;IACKD,EAAA,CAAAE,MAAA,kBAAW;IAAAF,EAAA,CAAAG,YAAA,EAAS;IAACH,EAAA,CAAAE,MAAA,GAC/B;IAAAF,EAAA,CAAAG,YAAA,EAAM;IACNH,EAAA,CAAAC,cAAA,WAAK;IACKD,EAAA,CAAAE,MAAA,kBAAU;IAAAF,EAAA,CAAAG,YAAA,EAAS;IAACH,EAAA,CAAAE,MAAA,IAC9B;IAAAF,EAAA,CAAAG,YAAA,EAAM;IAENH,EAAA,CAAAC,cAAA,WAAK;IACKD,EAAA,CAAAE,MAAA,cAAM;IAAAF,EAAA,CAAAG,YAAA,EAAS;IAACH,EAAA,CAAAE,MAAA,IAC1B;IAAAF,EAAA,CAAAG,YAAA,EAAM;;;;IAXwBH,EAAA,CAAAI,SAAA,GAC5B;IAD4BJ,EAAA,CAAAK,kBAAA,MAAAC,OAAA,CAAAC,GAAA,MAC5B;IAE6BP,EAAA,CAAAI,SAAA,GAC/B;IAD+BJ,EAAA,CAAAK,kBAAA,MAAAC,OAAA,CAAAE,SAAA,MAC/B;IAE8BR,EAAA,CAAAI,SAAA,GAC9B;IAD8BJ,EAAA,CAAAK,kBAAA,MAAAC,OAAA,CAAAG,QAAA,MAC9B;IAG0BT,EAAA,CAAAI,SAAA,GAC1B;IAD0BJ,EAAA,CAAAK,kBAAA,MAAAC,OAAA,CAAAI,KAAA,MAC1B;;;;;IAhBRV,EAAA,CAAAC,cAAA,YAAoE;IACsBD,EAAA,CAAAE,MAAA,YAAK;IAAAF,EAAA,CAAAG,YAAA,EAAK;IAChGH,EAAA,CAAAW,UAAA,IAAAC,oCAAA,iBAgBK;IACPZ,EAAA,CAAAG,YAAA,EAAK;;;;IAjB0CH,EAAA,CAAAI,SAAA,GAAQ;IAARJ,EAAA,CAAAa,UAAA,YAAAC,MAAA,CAAAC,KAAA,CAAQ;;;ADFzD,MAKaC,iBAAiB;EAK5BC,YAAoBC,IAAe;IAAf,KAAAA,IAAI,GAAJA,IAAI;IAHxB,KAAAH,KAAK,GAAU,EAAE;IACV,KAAAI,SAAS,GAAG,KAAK;EAEe;EAEvCC,QAAQA,CAAA;IACN,IAAI,CAACC,UAAU,EAAE;EACnB;EAEAA,UAAUA,CAAA;IACR,IAAI,CAACF,SAAS,GAAG,IAAI;IACrB,IAAI,CAACD,IAAI,CAACI,GAAG,CAAQ,4BAA4B,CAAC,CAACC,SAAS,CAC1DR,KAAK,IAAG;MACN,IAAI,CAACA,KAAK,GAAGA,KAAK;MAElB,IAAI,CAACI,SAAS,GAAG,KAAK;IACxB,CAAC,EACDK,KAAK,IAAG;MACNC,OAAO,CAACD,KAAK,CAACA,KAAK,CAAC;IACtB,CAAC,CACF;EACH;;AAvBWR,iBAAiB,C;mBAAjBA,iBAAiB,EAAAhB,EAAA,CAAA0B,iBAAA,CAAAC,EAAA,CAAAC,UAAA;AAAA;AAAjBZ,iBAAiB,C;QAAjBA,iBAAiB;EAAAa,SAAA;EAAAC,KAAA;EAAAC,IAAA;EAAAC,MAAA;EAAAC,QAAA,WAAAC,2BAAAC,EAAA,EAAAC,GAAA;IAAA,IAAAD,EAAA;MCR9BnC,EAAA,CAAAC,cAAA,aAAoB;MAClBD,EAAA,CAAAqC,SAAA,mBAA6B;MAE/BrC,EAAA,CAAAW,UAAA,IAAA2B,+BAAA,gBAmBO;MACPtC,EAAA,CAAAG,YAAA,EAAM;;;MApB4CH,EAAA,CAAAI,SAAA,GAAgB;MAAhBJ,EAAA,CAAAa,UAAA,UAAAuB,GAAA,CAAAjB,SAAA,CAAgB;;;;;;SDKrDH,iBAAiB"},"metadata":{},"sourceType":"module","externalDependencies":[]}